{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/main.ts","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AClFA;;GAEG;AACH,mEAA+D;AAC/D,qDAA6B;AAC7B,kDAA2B;AAG3B,IAAI,UAAyC,CAAC;AAE9C,SAAS,YAAY;IACjB,6BAA6B;IAC7B,UAAU,GAAG,IAAI,wBAAa,CAAC;QAC3B,eAAe;QACf,cAAc;QACd,MAAM,EAAE,GAAG;QACX,KAAK,EAAE,IAAI;QACX,cAAc,EAAE;YACZ,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE,MAAqC,CAAC,CAAC,CAAC,SAAK,CAAC,CAAC,CAAC,IAAI;SACjE;KACJ,CAAC,CAAC;IAEH,sCAAsC;IACtC,UAAU,CAAC,OAAO,CACd,GAAG,CAAC,MAAM,CAAC;QACP,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC;QAC9C,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,IAAI;KAChB,CAAC,CACL,CAAC;IAGF,UAAU,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAEtC,qCAAqC;IACrC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;QACzB,iEAAiE;QACjE,mEAAmE;QACnE,oDAAoD;QACpD,UAAU,GAAG,IAAI,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC;AAED,wDAAwD;AACxD,yDAAyD;AACzD,sDAAsD;AACtD,cAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAE9B,oCAAoC;AACpC,cAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC7B,2DAA2D;IAC3D,8DAA8D;IAC9D,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;QAC/B,cAAG,CAAC,IAAI,EAAE,CAAC;KACd;AACL,CAAC,CAAC,CAAC;AAEH,cAAG,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;IACpB,gEAAgE;IAChE,4DAA4D;IAC5D,IAAI,UAAU,KAAK,IAAI,EAAE;QACrB,YAAY,EAAE,CAAC;KAClB;AACL,CAAC,CAAC,CAAC;AAEH,4EAA4E;AAC5E,uEAAuE;;;;;;;;;;;;ACnEvE,qC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","/**\n * Entry point of the Election app.\n */\nimport { app, BrowserWindow, ipcMain as main } from 'electron';\nimport * as path from 'path';\nimport * as url from 'url';\n\n\nlet mainWindow: Electron.BrowserWindow | null;\n\nfunction createWindow(): void {\n    // Create the browser window.\n    mainWindow = new BrowserWindow({\n        // height: 600,\n        // width: 800,\n        height: 780,\n        width: 1300,\n        webPreferences: {\n            webSecurity: false,\n            devTools: process.env.NODE_ENV === 'production' ? false : true\n        }\n    });\n\n    // and load the index.html of the app.\n    mainWindow.loadURL(\n        url.format({\n            pathname: path.join(__dirname, './index.html'),\n            protocol: 'file:',\n            slashes: true\n        })\n    );\n\n\n    mainWindow.webContents.openDevTools();\n\n    // Emitted when the window is closed.\n    mainWindow.on('closed', () => {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null;\n    });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', () => {\n    // On OS X it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process.platform !== 'darwin') {\n        app.quit();\n    }\n});\n\napp.on('activate', () => {\n    // On OS X it\"s common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (mainWindow === null) {\n        createWindow();\n    }\n});\n\n// In this file you can include the rest of your app\"s specific main process\n// code. You can also put them in separate files and require them here.\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}